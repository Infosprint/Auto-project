{"ast":null,"code":"var _jsxFileName = \"C:\\\\Autontrade\\\\autontrade\\\\src\\\\pages\\\\PasswordReset.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Layout } from \"../components\";\nimport { useParams } from \"react-router-dom\";\nimport Lottie from \"react-lottie\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport animationData from \"../assets/security.json\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useGlobalContext } from \"../context/context\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  password: \"\",\n  confirmPassword: \"\"\n};\nconst PasswordReset = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    url\n  } = useGlobalContext();\n  const [formData, setFormData] = useState(initialState);\n  const params = useParams();\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\"\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(formData);\n    try {\n      const res = await axios.put(`${url}/employee/resetpassword/${params.resetId}`, {\n        password: formData.password\n      });\n      toast.success(\"Password updated successfully\");\n      navigate(\"/login\");\n    } catch (error) {\n      toast.error(\"Something went wrong\");\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" flex items-center justify-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative items-stretch flex w-[60%] xs:w-[80%] sm:w-[98%] md:w-[85%] lg:w-[60%] border-[1px] border-gray-200 shadow-lg bg-white justify-center overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 xs:hidden sm:hidden md:block max-sm:block lg:block\",\n          children: /*#__PURE__*/_jsxDEV(Lottie, {\n            options: defaultOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full flex-1 p-6 bg-gradient-to-r from-sky-300 to-sky-50 px-8  lg:max-w-xl\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl xs:text-xl sm:text-2xl font-semibold text-center text-black  underline\",\n            children: \"Reset your password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"flex gap-2 items-center justify-center flex-col pt-11\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"input input-bordered w-full max-w-md mb-3\",\n              placeholder: \"Enter password\",\n              value: formData.password,\n              onChange: e => setFormData({\n                ...formData,\n                password: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"input input-bordered w-full max-w-md\",\n              placeholder: \"Confirm password\",\n              value: formData.confirmPassword,\n              onChange: e => setFormData({\n                ...formData,\n                confirmPassword: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-sky-600 hover:bg-sky-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 mt-5\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordReset, \"7cKHJR/q0ZPJQj4CtisvfdEcBgI=\", false, function () {\n  return [useNavigate, useGlobalContext, useParams];\n});\n_c = PasswordReset;\nexport default PasswordReset;\nvar _c;\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["React","Layout","useParams","Lottie","toast","Toaster","animationData","useState","axios","useGlobalContext","useNavigate","initialState","password","confirmPassword","PasswordReset","navigate","url","formData","setFormData","params","defaultOptions","loop","autoplay","rendererSettings","preserveAspectRatio","handleSubmit","e","preventDefault","console","log","res","put","resetId","success","error","target","value"],"sources":["C:/Autontrade/autontrade/src/pages/PasswordReset.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Layout } from \"../components\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Lottie from \"react-lottie\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport animationData from \"../assets/security.json\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useGlobalContext } from \"../context/context\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst initialState = {\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\nconst PasswordReset = () => {\r\n  const navigate = useNavigate();\r\n  const { url } = useGlobalContext();\r\n  const [formData, setFormData] = useState(initialState);\r\n  const params = useParams();\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n    try {\r\n      const res = await axios.put(\r\n        `${url}/employee/resetpassword/${params.resetId}`,\r\n        {\r\n          password: formData.password,\r\n        }\r\n      );\r\n      toast.success(\"Password updated successfully\");\r\n      navigate(\"/login\");\r\n    } catch (error) {\r\n      toast.error(\"Something went wrong\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\" flex items-center justify-center h-screen\">\r\n        <div className=\"relative items-stretch flex w-[60%] xs:w-[80%] sm:w-[98%] md:w-[85%] lg:w-[60%] border-[1px] border-gray-200 shadow-lg bg-white justify-center overflow-hidden\">\r\n          <div className=\"flex-1 xs:hidden sm:hidden md:block max-sm:block lg:block\">\r\n            <Lottie options={defaultOptions} />\r\n          </div>\r\n          <div className=\"w-full flex-1 p-6 bg-gradient-to-r from-sky-300 to-sky-50 px-8  lg:max-w-xl\">\r\n            <h1 className=\"text-3xl xs:text-xl sm:text-2xl font-semibold text-center text-black  underline\">\r\n              Reset your password\r\n            </h1>\r\n            <form\r\n              onSubmit={handleSubmit}\r\n              className=\"flex gap-2 items-center justify-center flex-col pt-11\"\r\n            >\r\n              <input\r\n                type=\"password\"\r\n                className=\"input input-bordered w-full max-w-md mb-3\"\r\n                placeholder=\"Enter password\"\r\n                value={formData.password}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, password: e.target.value })\r\n                }\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                className=\"input input-bordered w-full max-w-md\"\r\n                placeholder=\"Confirm password\"\r\n                value={formData.confirmPassword}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, confirmPassword: e.target.value })\r\n                }\r\n              />\r\n              <button className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-sky-600 hover:bg-sky-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 mt-5\">\r\n                Update\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}